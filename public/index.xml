<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Xavier Alexander</title>
    <link>http://localhost:1313/</link>
    <description>Recent content on Xavier Alexander</description>
    <image>
      <title>Xavier Alexander</title>
      <url>https://github.com/xalxnder/xalexander-io/blob/main/images/avatar_white.png?raw=true</url>
      <link>https://github.com/xalxnder/xalexander-io/blob/main/images/avatar_white.png?raw=true</link>
    </image>
    <generator>Hugo -- 0.145.0</generator>
    <language>en</language>
    <atom:link href="http://localhost:1313/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Breaking Things (Slightly) with a Nexus Upgrade: A Retrospective</title>
      <link>http://localhost:1313/blog/nexus-upgrade/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/blog/nexus-upgrade/</guid>
      <description>&lt;h3 id=&#34;pre-upgrade&#34;&gt;Pre-Upgrade&lt;/h3&gt;
&lt;p&gt;Last night, I upgraded Nexus Repository Manager at my job. Nexus acts as a central hub for storing and distributing binaries, serving as a proxy for remote repositories, and hosting private artifacts. It sits behind Traefik, both of which are defined in a Docker Compose file. Since Traefik also needed an update, I figured I‚Äôd kill two birds with one stone üòÖ. I wasn‚Äôt nervous about the Nexus upgrade‚Äîit was a minor version jump. But Traefik? That made me nervous because it was a big jump.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Configuring Argo CD With Application Sets</title>
      <link>http://localhost:1313/blog/argo-application-sets/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/blog/argo-application-sets/</guid>
      <description>&lt;p&gt;In my homelab environment, I use Argo CD to manage and automate my Kubernetes deployments. When I initially set it up, adding a new application meant manually clicking the ‚ÄúNew App‚Äù button and filling out a form with details like the name, sync options, and repository URL. However, I quickly realized two things:
1.	My setup would continue to grow, meaning I‚Äôd be onboarding new applications regularly.
2.	There was no way I was going to manually configure every single application.&lt;/p&gt;</description>
    </item>
    <item>
      <title>How I Set Up a 3 Node Kubernetes Cluster</title>
      <link>http://localhost:1313/blog/k8s-cluster-guide/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/blog/k8s-cluster-guide/</guid>
      <description>&lt;p&gt;Six months ago, I started a new job as a DevSecOps engineer. During the interview process the team gave me a heads up about what tools they used. I was excited to learn Kubernetes was one of them. I thought to myself, &amp;ldquo;Cool, I&amp;rsquo;ll be ready. I&amp;rsquo;ve done a few tutorials on this.&amp;rdquo; But after the first few days,I quickly realized I was wrong‚ÄîI was not ready üòÇ. I wasn‚Äôt just dealing with single-container pods like in the tutorials. I was now faced with terms like &lt;code&gt;Ingress&lt;/code&gt;, &lt;code&gt;CRDs&lt;/code&gt;, and &lt;code&gt;PVCs&lt;/code&gt;‚Ä¶ none of it made sense. The days of simple walkthroughs were long gone. I needed a homelab to start building for real. I ordered the following &lt;a href=&#34;https://www.amazon.com/dp/B0D5Y4BKZD?th=1&#34;&gt;beelink&lt;/a&gt;, installed proxmox, and hit the ground running.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
